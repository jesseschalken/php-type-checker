#!/usr/bin/php
<?php

namespace JesseSchalken\PhpTypeChecker;

use JesseSchalken\PhpTypeChecker\Node\Parser;

require_once __DIR__ . '/../vendor/autoload.php';

/**
 * @param string $input
 * @return string[]
 */
function recursive_scan($input):array {
    if (is_dir($input) && !is_link($input)) {
        $result = [];
        foreach (array_diff(scandir($input), ['.', '..']) as $item) {
            foreach (recursive_scan($input . DIRECTORY_SEPARATOR . $item) as $item2) {
                $result[] = $item2;
            }
        }
        return $result;
    } else if (pathinfo($input, PATHINFO_EXTENSION) === 'php') {
        return [$input];
    } else {
        return [];
    }
}

/**
 * @param string $input
 * @return string[]
 */
function recursive_scan2($input):array {
    if (is_dir($input) && !is_link($input)) {
        return recursive_scan($input);
    } else {
        return [$input];
    }
}

function main() {
    $args = \Docopt::handle(<<<'s'
Usage:
    phptc [--include=DIR]... IN_DIR [OUT_DIR]

s
    );

    $input = $args['IN_DIR'];
    $files = recursive_scan2($input);
    foreach ($args['--include'] as $include) {
        $files = array_merge($files, recursive_scan2($include));
    }
    $files = array_unique($files);
    sort($files, SORT_STRING);
    $files = Parser::parseFiles($files);
}

class Project {

}

ini_set('memory_limit', '1000M');

main();

